trigger:
  branches:
    include:
      - main

resources:
  - repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerHubUsername: 'qcodeco'
  dockerHubRepo: 'dropflow-backend'

stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        strategy:
          maxParallel: 1
        displayName: Build
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Docker@2
            displayName: 'Login to Docker Hub'
            inputs:
              command: 'login'
              containerRegistry: 'dockerHubServiceConnection'
          - task: Docker@2
            displayName: Build and push image
            inputs:
              command: 'buildAndPush'
              repository: '$(dockerHubUsername)/$(dockerHubRepo)'
              dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
              tags: |
                $(tag)
                latest
          - task: Docker@2
            displayName: 'Logout from Docker Hub'
            inputs:
              command: 'logout'
              containerRegistry: 'dockerHubServiceConnection'
  - stage: Deploy
    displayName: Deploy to Kubernetes
    dependsOn: Build
    jobs:
      - job: Deploy
        strategy:
          maxParallel: 1
        displayName: Deploy
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: AzureKeyVault@2
            inputs:
              azureSubscription: 'Suscripción de Azure 1(1abc9f42-af17-497c-ae01-242f7cf40ab2)'
              KeyVaultName: 'k8config'
              SecretsFilter: '*'
              RunAsPreJob: false
          - task: AzureCLI@2
            displayName: 'Download kubeconfig from Azure Key Vault'
            inputs:
              azureSubscription: 'Suscripción de Azure 1(1abc9f42-af17-497c-ae01-242f7cf40ab2)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az keyvault secret show --name kubeconfigsecret --vault-name k8config --query value -o tsv > kubeconfig.yaml
          - script: |
              sed -i 's|TAG|$(tag)|g' k8s/deployment.yaml
            displayName: 'Replace TAG in Kubernetes deployment file'
          - task: Kubernetes@1
            displayName: 'Deploy to Kubernetes cluster'
            inputs:
              connectionType: 'None'
              command: 'apply'
              arguments: '--context rke -f k8s/deployment.yaml --kubeconfig=kubeconfig.yaml'
